#!/bin/sh

# Prints all batteries, their percentage remaining and an emoji corresponding
# to charge status (🔌 for plugged up, 🔋 for discharging on battery, etc.).

case $BLOCK_BUTTON in
	3) notify-send "🔋 Battery module" "🔋: discharging
🛑: not charging
♻: stagnant charge
🔌: charging
⚡: charged
❗: battery very low!
- Scroll to change adjust xbacklight." ;;
	4) brightnessctl set 100+ ;;
	5) brightnessctl set 100- ;;
	6) "$TERMINAL" -e "$EDITOR" "$0" ;;
esac

# Loop through all attached batteries and format the info
for battery in /sys/class/power_supply/BAT?*; do
	# If non-first battery, print a space separator.
	[ -n "${capacity+x}" ] && printf " "
	# Sets up the status and capacity
	case "$(cat "$battery/status")" in
		"Full") status="⚡ " ;;
		"Discharging") status="🔋 " ;;
		"Charging") status="🔌 " ;;
		"Not charging") status="🛑 " ;;
		"Unknown") status="♻️ " ;;
	esac
	capacity=$(cat "$battery/capacity")
	# Will make a warn variable if discharging and low
	[ "$status" = "🔋" ] && [ "$capacity" -le 35 ] && warn="❗"
  if [[ "$status" = "🔋" && "$capacity" -le 35 ]]; then
    notify-send -u critical -- "Battery is low ("$capacity%")"
    sleep 300
  fi
	# Prints the info
	printf "%s%s%d%%" "$status" "$warn" "$capacity"; unset warn
done && exit 0


