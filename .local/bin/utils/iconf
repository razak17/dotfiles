#!/bin/bash

CONF="/usr/bin/git --git-dir=$HOME/.dots/dotfiles/ --work-tree=$HOME"

confStatus() {
	eval "$CONF status"
}

confAdd() {
	eval "$CONF add ./**/*"
}

confCommit() {
	if [[ -z "$*" ]]; then
		echo "-n should have the next argument contain actual session"
	else
		message="$*"
		echo message: "$message"
		eval "$CONF commit -m '${message}'"
	fi
	exit 1
}

confCommits() {
	eval "$CONF log --pretty=oneline --abbrev-commit -- ."
}

confCommitAll() {
	if [[ -z "$*" ]]; then
		echo "-n should have the next argument contain actual session"
	else
		message="$*"
		echo message: "$message"
		eval "$CONF commit -a -m '${message}'"
	fi
	exit 1
}

confCommitAllNoMsg() {
	eval "$CONF commit -v -a"
}

confPull() {
	eval "$CONF pull"
}

confPush() {
	eval "$CONF push"
}

while [[ "$#" -gt 0 ]]; do
	curr=$1
	shift

	case "$curr" in
	"-cs")
		confStatus
		;;
	"-csa")
		confAdd
		;;
	"-ccom")
		read -p "Enter commit message: " arg
		confCommit "$arg"
		;;
	"-ccoms")
		confCommits
		;;
	"-ccma")
		confCommitAllNoMsg
		;;
	"-ccomall")
		if [[ "$#" -gt 0 ]]; then
			arg="$@"
		else
			read -rp "Enter commit message: " arg
		fi
		confCommitAll "$arg"
		;;
	"-cp")
		confPush
		;;
	"-ce")
		confPull
		;;
	*) echo "Unavailable command... $curr" ;;
	esac
done
