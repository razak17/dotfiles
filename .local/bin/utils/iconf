#!/bin/bash

CONF='/usr/bin/git --git-dir=$HOME/.dots/dotfiles/ --work-tree=$HOME'
NCONF='/usr/bin/git --git-dir=$HOME/.dots/$EDITOR/ --work-tree=$HOME/.config/$EDITOR'

confStatus() {
  eval "$CONF status"
}

confAdd() {
  eval "$CONF add ./**/*"
}

confCommit() {
  if [[ -z "$*" ]]; then
    echo "-n should have the next argument contain actual session"
  else
    message="$*"
    echo message: $message
    eval "$CONF commit -m '${message}'"
  fi
  exit 1
}

confCommits() {
  eval "$CONF log --pretty=oneline --abbrev-commit -- ."
}

confCommitAll() {
  if [[ -z "$*" ]]; then
    echo "-n should have the next argument contain actual session"
  else
    message="$*"
    echo message: $message
    eval "$CONF commit -a -m '${message}'"
  fi
  exit 1
}

confPush() {
 eval "$CONF push"
}

nconfStatus() {
  eval "$NCONF status"
}

nconfAdd() {
  eval "$NCONF add ./*/**"
}

nconfCommit() {
  if [[ -z "$*" ]]; then
    echo "-n should have the next argument contain actual session"
  else
    message="$*"
    echo message: $message
    eval "$NCONF commit -m '${message}'"
  fi
  exit 1
}

nconfCommits() {
  eval "$NCONF log --pretty=oneline --abbrev-commit -- ."
}

nconfCommitAll() {
  if [[ -z "$*" ]]; then
    echo "-n should have the next argument contain actual session"
  else
    message="$*"
    echo message: $message
    eval "$NCONF commit -a -m '${message}'"
  fi
  exit 1
}

nconfPush() {
 eval "$NCONF push"
}


while [[ "$#" -gt 0 ]]; do
  curr=$1
  shift

  case "$curr" in
  "-cs")
    confStatus
    ;;
  "-csa")
    confAdd
    ;;
  "-ccom")
    read -p "Enter commit message: " arg
    confCommit "$arg"
    ;;
  "-ccoms")
    confCommits
    ;;
  "-ccomall")
    if [[ "$#" -gt 0 ]] ; then
      arg="$@"
    else
      read -p "Enter commit message: " arg
    fi
    confCommitAll "$arg"
    ;;
  "-cp")
    confPush
    ;;
  "-ncs")
    nconfStatus
    ;;
  "-ncsa")
    nconfAdd
    ;;
  "-nccom")
    read -p "Enter commit message: " arg
    nconfCommit "$arg"
    ;;
  "-nccoms")
    nconfCommits
    ;;
  "-nccomall")
    if [[ "$#" -gt 0 ]] ; then
      arg="$@"
    else
      read -p "Enter commit message: " arg
    fi
    nconfCommitAll "$arg"
    ;;
  "-ncp")
    nconfPush
  ;;
  *) echo "Unavailable command... $curr"
  esac
done
