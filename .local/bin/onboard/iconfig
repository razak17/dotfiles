#!/usr/bin/env bash

installFnm() {
	fnm list
	fnm install v18.0.0
	fnm install v16.13.0
	fnm default v16.13.0
}

configDocker() {
	pacman -S docker docker-openrc
	sudo groupadd docker
	sudo usermod -aG docker "$USER"

	# openrc
	sudo rc-update add docker default
	sudo rc-service docker start

	# sudo systemctl enable docker.service
	# sudo systemctl enable containerd.service

	# sudo systemctl start docker.service
	# sudo systemctl start containerd.service
}

configPostgres() {
	pacman -S postgresql postgresql-openrc
	sudo -iu postgres

	# initdb -D /var/lib/postgres/data
	initdb --locale=en_US.UTF-8 -E UTF8 -D /var/lib/postgres/data

	sudo touch /var/lib/postgres/.psql_history

	createuser --interactive
	createdb myDatabaseName

	# openrc
	sudo rc-update add postgresql default
	sudo rc-service postgresql start

	# SELECT rolname FROM pg_roles;
	# normal mode
	# sudo systemctl enable postgresql.service
	# sudo systemctl start postgresql.service

}

configRedis() {
	pushd "$HOME"/Downloads/redis-stable || exit
	sudo cp src/redis-server /usr/local/bin/
	sudo cp src/redis-cli /usr/local/bin/

	sudo mkdir /etc/redis
	sudo mkdir /var/redis

	sudo mkdir /etc/init.d
	sudo cp utils/redis_init_script /etc/init.d/redis_6379

	sudo nvim /etc/init.d/redis_6379

	sudo cp redis.conf /etc/redis/6379.conf

	# Working dir
	sudo mkdir /var/redis/6379

	# Edit the configuration file
	sudo nvim /etc/redis/6379.conf
	# Set daemonize to yes (by default it is set to no).
	# Set the pidfile to /var/run/redis_6379.pid (modify the port if needed).
	# Change the port accordingly. In our example it is not needed as the default port is already 6379.
	# Set your preferred loglevel.
	# Set the logfile to /var/log/redis_6379.log
	# Set the dir to /var/redis/6379 (very important step!)

	sudo update-rc.d redis_6379 defaults
	sudo /etc/init.d/redis_6379 start

	# Try pinging your instance with redis-cli.
	# Do a test save with redis-cli save and check that the dump file is correctly stored into /var/redis/6379/ (you should find a file called dump.rdb).
	# Check that your Redis instance is correctly logging in the log file.
}

configFirefox() {
	# Setup Firefox Profiles
	dir="$HOME/.dots/firefox-user.js"
	if [ ! -d "$dir" ]; then
		git clone https://github.com/razak17/firefox-user.js "$HOME/.dots"
	fi
	pushd "$dir" || exit
	sh ./setup.sh -all
}

ZshCompletions() {
	OH_MY_ZSH="https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/plugins"
	git_dir="$HOME/.config/zsh/plugins/git"
	if [ ! -e "$git_dir" ]; then
		mkdir -p "$git_dir"
		cd "$git_dir" || exit
		curl -fsSL $OH_MY_ZSH/git/git.plugin.zsh --output git.plugin.zsh
		curl -fsSL $OH_MY_ZSH/git/README.md --output README.md
	fi
	yarn_dir="$HOME/.config/zsh/plugins/yarn"
	if [ ! -e "$yarn_dir" ]; then
		mkdir -p "$yarn_dir"
		pushd "$yarn_dir" || exit
		curl -fsSL $OH_MY_ZSH/yarn/yarn.plugin.zsh --output yarn.plugin.zsh
		curl -fsSL $OH_MY_ZSH/yarn/README.md --output README.md
		curl -fsSL $OH_MY_ZSH/yarn/_yarn --output _yarn
	fi
	fnm_dir="$HOME/.config/zsh/plugins/fnm"
	if [ ! -e "$fnm_dir/_fnm" ]; then
		mkdir -p "$fnm_dir"
		pushd "$fnm_dir" || exit
		fnm completions --shell zsh >_fnm
	fi
	echo "DONE"
}

libxftSetup() {
	git clone https://github.com/uditkarode/libxft-bgra "$HOME/.dots/libxft-bgra"
	cd "$HOME/.dots/libxft-bgra" || exit
	sh autogen.sh --sysconfdir=/etc --prefix=/usr --mandir=/usr/share/man
	sudo make install
}

while [[ "$#" -gt 0 ]]; do
	curr=$1
	shift

	case "$curr" in
	"-fnm") installFnm ;;
	"-docker") configDocker ;;
	"-postgres") configPostgres ;;
	"-redis") configRedis ;;
	"-firefox") configFirefox ;;
	"-zsh") ZshCompletions ;;
	"-libx") libxftSetup ;;
	"-all")
		configDocker
		configPostgres
		configRedis
		configFirefox
		installFnm
		;;
	*) echo "Unavailable command... $curr" ;;
	esac
done
