#!/bin/bash

# fzf browse directories and cd into them
fo() {
	local dir
	dir=$(fd -IH -t d -E '.git' 2> /dev/null | fzf --prompt 'folders:' +m --preview-window='right:50%:nohidden:wrap' --preview='exa --tree --level=2 {}') && cd "$dir"
}

# fzf browse files
# ff() {
# 	IFS=$'\n' files=($(fzf --query="$1" --multi --select-1 --exit-0 --prompt 'files:' --preview='exa --tree --level=1 $(dirname {})'))
# 	[[ -n "$files" ]] && rvim --no-lsp "${files[@]}"
# }

# preview files
preview_files() {
	local selection
	if [[ -z "$1" ]]; then
		selection="$(fd -u -t f -E '.git/' | fzf)" && preview_files "$selection"
		return 0
	fi

	case $1 in
		-e)
			shift
			selection="$(fd -u -t f -E '.git/' -e $1 | fzf --multi --select-1 --exit-0 | tr '\n' ' ')"
			[[ -n "$selection" ]] && preview_files "${(z)selection}"
			shift
			;;
		-t)
			bat --style='grid' ~/.todo;;
		*.md)
			glow -s ~/.config/glow/customglow.json -p $@;;
		*.json)
			jq '.' -C $1 | less -R;;
		*.csv)
			vd "$@";;
		*.pdf)
			zathura $1;;
		*)
			if [[ -f $1 ]] then
				bat --style='header,grid' $1
			else
				which $1 | bat -l sh --style 'grid'
			fi
	esac
}

# curl weather
weather() {
	local location
	[[ $# -eq 0 ]] && location="Berlin" || location=$1
	curl wttr.in/${location}\?F
}

# open PRs in nvim diffview
nvim_diff() {
	[[ ! "$(git rev-parse --is-inside-work-tree 2>/dev/null)" = "true" ]] && { echo "not a git repo"; return; }

	local branches="$(git branch -a --format='%(refname:short)' | grep -v 'HEAD' |
		fzf -d' ' \
		--prompt="branches:" \
		--preview="git log --oneline --format='%C(bold blue)%h%C(reset) - %C(green)%ar%C(reset) - %C(cyan)%an%C(reset)%C(bold yellow)%d%C(reset): %s' --color=always {}" \
		--header=$'\n' \
		--no-info
	)"

	if [[ -n "$branches" ]]; then
		nvim +"DiffviewOpen $branches" +tabonly
	fi
}

# find files
#   fd -t file --hidden --exclude .git --exclude .github --search-path . | fzf --reverse --border=rounded --height 20 | xargs -r nvim
ff() {
	ws="$HOME/personal/workspace"
	selected=$(find "$ws"/coding "$ws"/rgt ~/.dots ~/.config ~/.local/share/rvim/lazy -mindepth 1 -maxdepth 2 -type d | fzf --no-sort)
	if [ -z "$selected" ]; then
		return
	fi
	# selected_name="$(basename "$selected" | tr . _)"
	cd "$selected" || exit
	rvim --no-lsp --no-treesitter
	cd - || return
}

# Only show files which have $1 present in contents
fw() {
	line=$(rg "$1" | fzf)
	rvim $(cut -d':' -f1 <<<"$line") +$(cut -d':' -f2 <<<"$line")
}

# zd - use zoxide & FZF to find and go to directory
# Not sure why zoxide query -i with FZF doesn't CD
zd() {
	dir=$(zoxide query -l | fzf)

	if [ -n "$dir" ]; then
		cd "$dir" || exit
	fi
}

# see environment variables
envs() {
	# ps eww -o command | tr ' ' '\n'
	printenv | fzf
}

scr() {
	pushd "$HOME/Pictures/screenshots" >/dev/null || return
	if exists ranger; then
		ranger
	fi
	cd - || return
}

# todos() {
#   cd "$HOME/notes/neorg" || return
#   file="$(find . -type f | sort | fzf)"
# 	if [ -n $file ]; then
# 		rvim --minimal "$file"
# 	fi
#   cd - || return
# }
