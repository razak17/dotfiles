#!/bin/zsh

# ZSH only and most performant way to check existence of an executable
# https://www.topbug.net/blog/2016/10/11/speed-test-check-the-existence-of-a-command-in-bash-and-zsh/
exists() { (( $+commands[$1] )); }

# Default to using `bat` https://github.com/sharkdp/bat#installation if it has been installed
cat() {
  if hash bat 2>/dev/null; then
    bat "$@"
  else
    cat "$@"
  fi
}

# chmod a directory
ch() {
  sudo chmod -R 777 "$@"
}

# chmod executable
cx() {
  sudo chmod +x "$@"
}

rcr() {
  sudo rc-service "$1" restart
}

rcs() {
  sudo rc-service "$1" start
}

rcst() {
  sudo rc-service "$1" status
}

rcadd() {
  sudo rc-update add "$1" default
}

rcdel() {
  sudo rc-update del "$1" default
}

zshcomp() {
  for command completion in ${(kv)_comps:#-*(-|-,*)}
  do
    printf "%-32s %s\n" $command $completion
  done | sort
}

pacov() {
  sudo pacman -S "$@" --overwrite '*'
}

scrdim() {
  xdpyinfo | awk '/dimensions/{print $2}'
}

ivpn() {
  server="$@"
  sudo openvpn --config $server --auth-user-pass ~/docs/vpn.txt
}

mc() {
  mkdir -p "$@" && cd "$@"
}

usb1() {
  if [ ! -d "/mnt/usb1/TV" ]; then
    sudo mkdir -p /mnt/usb1
    sudo mount /dev/sda1 /mnt/usb1
  fi
  cd /mnt/usb1/
}

buildnvim() {
  neovim_dir="$HOME/.dots/neovim"
  bin_dir="$HOME/.local/bin"
  [ ! -d $neovim_dir ] && git clone https://github.com/neovim/neovim $neovim_dir
  pushd $neovim_dir
  git checkout master
  # git pull upstream master
  git pull
  [ -d "$neovim_dir/build/" ] && sudo rm -r ./build/  # clear the CMake cache
  sudo make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim"
  sudo make install

  # Save old binary
  dd=$(date +%F_%H%M%S_%N)
  oldfile="nvim-$dd"
  echo $oldfile
  [ -e "$bin_dir/nvim" ] && mv $bin_dir/nvim $bin_dir/$oldfile
  cp $HOME/neovim/bin/nvim $bin_dir

  popd
}

zen_installer() {
  bash <(curl https://updates.zen-browser.app/appimage.sh) "$1"
}

zen_del() {
  pushd "$HOME/.zen" || return

  if ls -d firefox-* 1>/dev/null 2>&1; then
    rm -r firefox-*
  fi

  cd -
}

zen_update() {
  dd=$(date +%F_%H%M%S_%N)

  if [[ "$1" == "twilight" ]]; then
    oldzen="zen-tw-$dd"
    [ -e "$HOME/.local/bin/zen-tw" ] && mv "$HOME/.local/bin/zen-tw" "$HOME/.local/bin/$oldzen"
    cp "$HOME/.local/share/AppImage/ZenTwilight.AppImage" "$HOME/.local/bin/zen-tw"
    exit 1
  fi

  if [ -e "$HOME/.local/share/AppImage/ZenBrowser.AppImage" ] ; then
    oldzen="zen-$dd"
    [ -e "$HOME/.local/bin/zen" ] && mv "$HOME/.local/bin/zen" "$HOME/.local/bin/$oldzen"
    cp "$HOME/.local/share/AppImage/ZenBrowser.AppImage" "$HOME/.local/bin/zen"
  fi
}

zip_ext() {
  name=$1
  pushd "./dist"
  zip -1 -r $name * && mv $name ..
  cd -
}

function y() {
  local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
  yazi "$@" --cwd-file="$tmp"
  if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
          builtin cd -- "$cwd"
  fi
  rm -f -- "$tmp"
}
