#!/bin/zsh

# ZSH only and most performant way to check existence of an executable
# https://www.topbug.net/blog/2016/10/11/speed-test-check-the-existence-of-a-command-in-bash-and-zsh/
exists() { (( $+commands[$1] )); }

# Default to using `bat` https://github.com/sharkdp/bat#installation if it has been installed
cat() {
  if hash bat 2>/dev/null; then
    bat "$@"
  else
    cat "$@"
  fi
}

# chmod a directory
ch() {
  sudo chmod -R 777 "$@"
}

# fix permissions
chf() {
  sudo compaudit | xargs chmod g-w,o-w "$@"
}

neob() {
  if [ -e ~/.local/bin/nvim ]; then
    mv ~/.local/bin/nvim ~/.local/bin/nvim-old
  fi

  cp --force ~/.dots/neovim/build/bin/nvim  ~/.local/bin
}

# chown a directory
cho() {
  sudo chown -R www:www "$@"
}

# chmod executable
cx() {
  sudo chmod +x "$@"
}

zshcomp() {
  for command completion in ${(kv)_comps:#-*(-|-,*)}
  do
    printf "%-32s %s\n" $command $completion
  done | sort
}

ires() {
  xdpyinfo | awk '/dimnsions/{print $2}'
}

irecentNote() {
  ls -r ~/notes/src/* | head -n1 | xargs rvim -u ~/docs/raw.lua
}

ivpn() {
  server="$@"
  sudo openvpn --config $server --auth-user-pass ~/docs/vpnbook
}

mc() {
  mkdir "$@" && cd "$@"
}

#look up synonym - (word)
# slow and buggy
syn() {
  curl -s "https://api.dictionaryapi.dev/api/v2/entries/en/$1" | jq '.[].meanings[].definitions[].synonyms[]'
}

# take, npm init and git init and ignore node_modules
tng() {
  take $1 && npm init -y && git init && echo "node_modules" >> .gitignore
}

buildnvim() {
    neovim_dir="$HOME/.dots/nvim/neovim"
    [ ! -d $neovim_dir ] && git clone git@github.com:neovim/neovim.git $neovim_dir
    pushd $neovim_dir
    git checkout master
    git pull upstream master
    [ -d "$neovim_dir/build/" ] && sudo rm -r ./build/  # clear the CMake cache
    make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim"
    make install
    popd
}
