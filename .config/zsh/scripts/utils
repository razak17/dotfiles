#!/bin/zsh

# ZSH only and most performant way to check existence of an executable
# https://www.topbug.net/blog/2016/10/11/speed-test-check-the-existence-of-a-command-in-bash-and-zsh/
exists() { (( $+commands[$1] )); }

# Default to using `bat` https://github.com/sharkdp/bat#installation if it has been installed
cat() {
  if hash bat 2>/dev/null; then
    bat "$@"
  else
    cat "$@"
  fi
}

# chmod a directory
ch() {
  sudo chmod -R 777 "$@"
}

# chown a directory
cho() {
  sudo chown -R www:www "$@"
}

# chmod executable
cx() {
  sudo chmod +x "$@"
}

zshcomp() {
  for command completion in ${(kv)_comps:#-*(-|-,*)}
  do
    printf "%-32s %s\n" $command $completion
  done | sort
}

scrdim() {
  xdpyinfo | awk '/dimensions/{print $2}'
}

lastNote() {
  ls -r ~/notes/src/* | head -n1 | xargs $TEXT_EDITOR
}

ivpn() {
  server="$@"
  sudo openvpn --config $server --auth-user-pass ~/docs/vpnbook
}

mc() {
  mkdir -p "$@" && cd "$@"
}

buildnvim() {
  neovim_dir="$HOME/.dots/nvim/neovim"
  bin_dir="$HOME/.local/bin"
  [ ! -d $neovim_dir ] && git clone https://github.com/neovim/neovim $neovim_dir
  pushd $neovim_dir
  git checkout master
  # git pull upstream master
  git pull
  [ -d "$neovim_dir/build/" ] && sudo rm -r ./build/  # clear the CMake cache
  sudo make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=$HOME/neovim"
  sudo make install

  # Save old binary
  dd=$(date +%F_%H%M%S_%N)
  oldfile="nvim-$dd"
  echo $oldfile
  [ -e "$bin_dir/nvim" ] && mv $bin_dir/nvim $bin_dir/$oldfile
  cp $HOME/neovim/bin/nvim $bin_dir

  popd
}
