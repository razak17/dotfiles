#!/bin/zsh

typeset -A __DOTS

__DOTS[ITALIC_ON]=$'\e[3m'
__DOTS[ITALIC_OFF]=$'\e[23m'
__DOTS[LS_COLORS]=${LS_COLORS:-'di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'}

# Init completions
autoload -Uz compinit
zmodload -i zsh/complist
_comp_options+=(globdots)   # Include hidden files.

# Override colors
eval "$(dircolors -b $ZDOTDIR/dircolors)"

# Enable keyboard navigation of completions in menu
# (not just tab/shift-tab but cursor keys as well):
zstyle ':completion:*:*:*:*:*' menu select

# Make completion:
# (stolen from Wincent)
# - Try exact (case-sensitive) match first.
# - Then fall back to case-insensitive.
# - Accept abbreviations after . or _ or - (ie. f.b -> foo.bar).
# - Substring complete (ie. bar -> foobar).
zstyle ':completion:*' matcher-list '' '+m:{[:lower:]}={[:upper:]}' '+m:{[:upper:]}={[:lower:]}' '+m:{_-}={-_}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'

# Allow completion of ..<Tab> to ../ and beyond.
zstyle -e ':completion:*' special-dirs '[[ $PREFIX = (../)#(..) ]] && reply=(..)'

# Colorize completions using  `ls` colors.
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-colors ${(s.:.)__DOTS[LS_COLORS]}
zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#) ([0-9a-z-]#)*=01;34=0=01'
zstyle ':completion:*:*:*:*:processes' command "ps -u $USERNAME -o pid,user,comm -w -w"

# Only display some tags for the command cd
zstyle ':completion:*:*:cd:*' tag-order local-directories directory-stack path-directories

# Use caching to make completion for commands such as dpkg and apt usable.
zstyle ':completion::complete:*' use-cache on
zstyle ':completion::complete:*' cache-path "${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompcache"

# Style the group names
zstyle ':completion:*' format %F{yellow}%B%U%{$__DOTS[ITALIC_ON]%}%d%{$__DOTS[ITALIC_OFF]%}%b%u%f

# Group matches and descriptions.
zstyle ':completion:*:*:*:*:corrections' format '%F{teal}!- %d (errors: %e) -!%f'
zstyle ':completion:*:*:*:*:descriptions' format '%F{cyan}-- %D %d --%f'
zstyle ':completion:*:*:*:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:*:*:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*' format ' %F{blue}-- %d --%f'

# enabling autocompletion of privileged environments in privileged commands
zstyle ':completion::complete:*' gain-privileges 1

# Required for completion to be in groups (named after the tags)
zstyle ':completion:*' group-name ''
zstyle ':completion:*:*:-command-:*:*' group-order commands alias functions builtins

# force zsh to realize new commands
zstyle ':completion:*' completer _oldlist _expand _complete _match _prefix _ignored _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# This enables Zsh to understand commands like docker run -it ubuntu.
# However, by enabling this, this also makes Zsh complete docker run
# -u<tab> with docker run -uapprox which is not valid. The users have
# to put the space or the equal sign themselves before trying to complete.
# Therefore, this behavior is disabled by default. To enable it:
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

# Added by running `compinstall`
zstyle ':completion:*' expand suffix
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
# zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' list-suffixes true
# End of lines added by compinstall

# Detaled list of files and folders
# zstyle ':completion:*' file-list all

# Expand // to /
zstyle ':completion:*' squeeze-slashes true

# Order completions by date of modification.
zstyle ':completion:*' file-sort modification

# Suggest options like "-L, -f" after - for commands like cd chdir on tab.
zstyle ':completion:*' complete-options true

zle -C alias-expension complete-word _generic
bindkey '^A' alias-expension
zstyle ':completion:alias-expension:*' completer _expand_alias

expand-or-complete-with-dots() {
  print -Pn "%F{red}â€¦%f"
  zle expand-or-complete
  zle redisplay
}
zle -N expand-or-complete-with-dots
# Set the function as the default tab completion widget
bindkey -M viins "^I" expand-or-complete-with-dots
bindkey -M vicmd "^I" expand-or-complete-with-dots
