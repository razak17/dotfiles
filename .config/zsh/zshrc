#!/bin/zsh

# profiling
zmodload zsh/zprof

# DO not highligh& pasted text
zle_highlight=('paste:none')

# colors
autoload -U colors && colors

# These should be source *BEFORE* setting up hooks
source $ZDOTDIR/plugins/zsh-completions/zsh-completions.plugin.zsh
source $ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
source $ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source $ZDOTDIR/plugins/conda-zsh-completion/conda-zsh-completion.plugin.zsh
autoload zmv # builtin zsh rename command

ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd history completion)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_MANUAL_REBIND=""

ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

# Local scripts
for script in $ZDOTDIR/scripts/*; do
  source $script
done

# load config files
add_files opts compe vim-mode hooks binds prompt aliases

# fzf
[ -f $HOME/.fzf.zsh ] && source $HOME/.fzf.zsh

# Load completions
fpath+="$ZDOTDIR/completion/"

# asdf
if [ -d "$HOME/.asdf" ]; then
  source $HOME/.asdf/asdf.sh
  fpath+="$ASDF_DIR/completions/"
fi
# Azure cli
if [ -d "$HOME/lib/azure-cli" ]; then
  source $HOME/lib/azure-cli/az.completion
fi

# ZSH only and most performant way to check existence of an executable
# https://www.topbug.net/blog/2016/10/11/speed-test-check-the-existence-of-a-command-in-bash-and-zsh/
exists() { (( $+commands[$1] )); }

# fnm
eval "`fnm env`"

# pip
# eval "`pip completion --zsh`"

# zoxide
if exists zoxide; then
  eval "$(zoxide init zsh)"
fi

# Load and initialize the completion system ignoring insecure directories with a
# cache time of 20 hours, so it should almost always regenerate the first time a
# shell is opened each day.
# #q expands globs in conditional expressions
_comp_path="${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompdump"
if [[ $_comp_path(#qNmh-20) ]]; then
  # -C (skip function check) implies -i (skip security check).
  compinit -C -d "$_comp_path"
else
  mkdir -p "$_comp_path:h"
  compinit -i -d "$_comp_path"
  # Keep $_comp_path younger than cache time even if it isn't regenerated.
  touch "$_comp_path"
fi
unset _comp_path
