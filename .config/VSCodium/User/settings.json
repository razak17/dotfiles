{
  "bracket-pair-colorizer-2.colorMode": "Independent",
  "bracket-pair-colorizer-2.showBracketsInGutter": true,
  "code-runner.runInTerminal": false,
  "code-runner.saveFileBeforeRun": true,
  "code-runner.clearPreviousOutput": true,
  "code-runner.showExecutionMessage": false,
  "code-runner.executorMap": {
    "python": "python"
  },
  "editor.fontSize": 13,
  "editor.lineHeight": 22,
  "editor.tabSize": 2,
  "editor.wordWrap": "off",
  "editor.fontWeight": "400",
  "editor.wordWrapColumn": 80,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.fontLigatures": true,
  "editor.linkedEditing": true,
  "editor.tabCompletion": "on",
  "editor.minimap.maxColumn": 90,
  "editor.minimap.enabled": false,
  "editor.matchBrackets": "always",
  "editor.cursorBlinking": "solid",
  "editor.lineNumbers": "relative",
  "editor.wrappingIndent": "indent",
  "editor.scrollBeyondLastColumn": 5,
  "editor.suggestSelection": "first",
  "editor.wordBasedSuggestions": true,
  "editor.wrappingStrategy": "simple",
  "editor.scrollBeyondLastLine": false,
  "editor.autoClosingQuotes": "always",
  "editor.snippetSuggestions": "inline",
  "editor.minimap.size": "proportional",
  "editor.suggest.insertMode": "insert",
  "editor.acceptSuggestionOnEnter": "on",
  "editor.autoClosingBrackets": "always",
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.horizontal": "hidden",
  "editor.acceptSuggestionOnCommitCharacter": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "editor.rulers": [
    {
      "column": 90,
      "color": "#3D3D49"
    }
  ],
  "editor.fontFamily": "'FiraCode Nerd Font Mono', 'Hack Nerd Font', 'consolas'",
  "emmet.showSuggestionsAsSnippets": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 100,
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true
  },
  "git.autofetch": true,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.advanced.fileHistoryShowAllBranches": true,
  "js/ts.implicitProjectConfig.checkJs": true,
  "telemetry.enableCrashReporter": false,
  "telemetry.enableTelemetry": false,
  "terminal.integrated.fontSize": 13,
  "editor.cursorStyle": "block",
  "terminal.integrated.cursorBlinking": false,
  "terminal.integrated.allowChords": false,
  "terminal.integrated.shell.linux": "/bin/zsh",
  "terminal.integrated.rendererType": "dom",
  "vscode-neovim.neovimExecutablePaths.linux": "/home/razak/.local/bin/nvim",
  "vscode-neovim.neovimInitVimPaths.linux": "$HOME/.config/nvim/init.vim",
  "window.menuBarVisibility": "toggle",
  "window.zoomLevel": 0,
  "workbench.sideBar.location": "left",
  "workbench.editor.showTabs": true,
  "workbench.activityBar.iconClickBehavior": "toggle",
  "workbench.panel.defaultLocation": "left",
  "workbench.activityBar.visible": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.colorTheme": "One Dark Pro",
  "workbench.commandPalette.preserveInput": true,
  "workbench.iconTheme": "vs-seti",
  "workbench.statusBar.visible": false,
  "zenMode.hideActivityBar": true,
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "editor.tokenColorCustomizations": {
    "[One Dark Pro]": {
      "textMateRules": [
        {
          "name": "json",
          "scope": [
            "support.type.property-name.json",
            "string.json",
            "meta.structure.dictionary.json",
            "meta.structure.dictionary.value.json",
            "meta.structure.dictionary.json",
            "meta.structure.array.json",
            "meta.structure.dictionary.value.json",
            "meta.structure.dictionary.json",
            "meta.structure.dictionary.value.json",
            "meta.structure.dictionary.json",
            "meta.structure.dictionary.value.json",
            "meta.structure.dictionary.json",
            "source.json"
          ],
          "settings": {
            "foreground": "#9CDCFE"
          }
        },
        {
          "name": "json",
          "scope": [
            "string.quoted.double.json"
          ],
          "settings": {
            "foreground": "#CE9178"
          }
        },
        {
          "name": "json",
          "scope": [
            "constant.numeric.json"
          ],
          "settings": {
            "foreground": "#B5CEA8"
          }
        },
        {
          "name": "json",
          "scope": [
            "constant.language.json"
          ],
          "settings": {
            "foreground": "#569CD6"
          }
        },
        {
          "name": "json",
          "scope": [
            "support.type.property-name.json.comments"
          ],
          "settings": {
            "foreground": "#9CDCFE"
          }
        },
        {
          "name": "json",
          "scope": [
            "string.quoted.double.json.comments"
          ],
          "settings": {
            "foreground": "#CE9178"
          }
        },
        {
          "name": "json",
          "scope": [
            "constant.numeric.json.comments"
          ],
          "settings": {
            "foreground": "#B5CEA8"
          }
        },
        {
          "name": "const",
          "scope": [
            "storage.type.tsx",
            "storage.type.function.tsx"
          ],
          "settings": {
            "foreground": "#b572f3"
          }
        },
        {
          "name": "json",
          "scope": [
            "entity.name.type.interface"
          ],
          "settings": {
            "foreground": "#8bdb55"
          }
        },
        {
          "name": "jsx, tsx component attribute tags",
          "scope": [
            "entity.other.attribute-name"
          ],
          "settings": {
            "foreground": "#96b8e0"
          }
        },
        {
          "name": "jsx and tsx components",
          "scope": [
            "support.class.component.open.tsx",
            "support.class.component.close.tsx",
            "support.class.component.tsx"
          ],
          "settings": {
            "foreground": "#E06C75"
          }
        }
      ]
    }
  },
  "workbench.colorCustomizations": {
    "[Default Dark+]": {
      "statusBar.background": "#2E2E2E",
      "statusBar.foreground": "#8C8C8C",
      "statusBarItem.remoteBackground": "#2E2E2E",
      "statusBarItem.remoteForeground": "#8C8C8C",
      "activityBar.background": "#2E2E2E",
      "tab.inactiveBackground": "#2E2E2E"
    },
    "[One Dark Pro]": {
      "editor.background": "#1e2127",
      "terminal.background": "#1e2127",
      "terminal.foreground": "#abb2bf",
      "terminal.ansiBlack": "#1e2127",
      "terminal.ansiBlue": "#61afef",
      "terminal.ansiCyan": "#56b6c2",
      "terminal.ansiGreen": "#98C379",
      "terminal.ansiMagenta": "#c678dd",
      "terminal.ansiRed": "#e06c75",
      "terminal.ansiWhite": "#abb2bf",
      "terminal.ansiYellow": "#d19a66",
      "terminal.ansiBrightBlack": "#5c6370",
      "terminal.ansiBrightBlue": "#61afef",
      "terminal.ansiBrightCyan": "#56b6c2",
      "terminal.ansiBrightGreen": "#98c379",
      "terminal.ansiBrightMagenta": "#c678dd",
      "terminal.ansiBrightRed": "#e06c75",
      "terminal.ansiBrightWhite": "#ffffff",
      "terminal.ansiBrightYellow": "#d19a66"
    }
  },
  "whichkey.delay": 0,
  "whichkey.sortOrder": "alphabetically",
  "whichkey.bindings": [
    {
      "key": ";",
      "name": "commands",
      "type": "command",
      "command": "workbench.action.showCommands"
    },
    {
      "key": "/",
      "name": "comment",
      "type": "command",
      "command": "vscode-neovim.send",
      "args": "<C-/>"
    },
    {
      "key": "?",
      "name": "View All References",
      "type": "command",
      "command": "references-view.find",
      "when": "editorHasReferenceProvider"
    },
    {
      "key": "a",
      "name": "Actions...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Add folder to workspace",
          "type": "command",
          "command": "workbench.action.addRootFolder"
        },
        {
          "key": "F",
          "name": "Select file icon theme",
          "type": "command",
          "command": "workbench.action.selectIconTheme"
        },
        {
          "key": "n",
          "name": "No Highlight",
          "type": "command",
          "command": "vscode-neovim.send",
          "args": ":noh<CR>"
        },
        {
          "key": "R",
          "name": "Reload window",
          "type": "command",
          "command": "workbench.action.reloadWindow"
        },
        {
          "key": "s",
          "name": "Inspect editor tokens and scopes",
          "type": "command",
          "command": "editor.action.inspectTMScopes"
        },
        {
          "key": "S",
          "name": "Save workspace As",
          "type": "command",
          "command": "workbench.action.saveWorkspaceAs"
        },
        {
          "key": "T",
          "name": "Select theme",
          "type": "command",
          "command": "workbench.action.selectTheme"
        }
      ]
    },
    {
      "key": "b",
      "name": "Buffers/Editors...",
      "type": "bindings",
      "bindings": [
        {
          "key": "x",
          "name": "Close active editor",
          "type": "command",
          "command": "workbench.action.closeActiveEditor"
        },
        {
          "key": "h",
          "name": "Move editor into left group",
          "type": "command",
          "command": "workbench.action.moveEditorToLeftGroup"
        },
        {
          "key": "j",
          "name": "Move editor into below group",
          "type": "command",
          "command": "workbench.action.moveEditorToBelowGroup"
        },
        {
          "key": "k",
          "name": "Move editor into above group",
          "type": "command",
          "command": "workbench.action.moveEditorToAboveGroup"
        },
        {
          "key": "l",
          "name": "Move editor into right group",
          "type": "command",
          "command": "workbench.action.moveEditorToRightGroup"
        },
        {
          "key": "m",
          "name": "Close other editors",
          "type": "command",
          "command": "workbench.action.closeOtherEditors"
        },
        {
          "key": "n",
          "name": "Next editor",
          "type": "command",
          "command": "workbench.action.nextEditor"
        },
        {
          "key": "p",
          "name": "Previous editor",
          "type": "command",
          "command": "workbench.action.previousEditor"
        },
        {
          "key": "f",
          "name": "Recently open",
          "type": "command",
          "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
        },
        {
          "key": "s",
          "name": "files",
          "type": "command",
          "command": "workbench.action.quickOpen"
        },
        {
          "key": "N",
          "name": "New untitled editor",
          "type": "command",
          "command": "workbench.action.files.newUntitledFile"
        },
        {
          "key": "u",
          "name": "Reopen closed editor",
          "type": "command",
          "command": "workbench.action.reopenClosedEditor"
        },
        {
          "key": "y",
          "name": "Copy buffer to clipboard",
          "type": "commands",
          "commands": [
            "editor.action.selectAll",
            "editor.action.clipboardCopyAction",
            "cancelSelection"
          ]
        }
      ]
    },
    {
      "key": "d",
      "name": "Debug...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Start debug",
          "type": "command",
          "command": "workbench.action.debug.start"
        },
        {
          "key": "S",
          "name": "Stop debug",
          "type": "command",
          "command": "workbench.action.debug.stop"
        },
        {
          "key": "c",
          "name": "Continue debug",
          "type": "command",
          "command": "workbench.action.debug.continue"
        },
        {
          "key": "p",
          "name": "Pause debug",
          "type": "command",
          "command": "workbench.action.debug.pause"
        },
        {
          "key": "r",
          "name": "Run without debugging",
          "type": "command",
          "command": "workbench.action.debug.run"
        },
        {
          "key": "R",
          "name": "Restart debug",
          "type": "command",
          "command": "workbench.action.debug.restart"
        },
        {
          "key": "i",
          "name": "Step into",
          "type": "command",
          "command": "workbench.action.debug.stepInto"
        },
        {
          "key": "s",
          "name": "Step over",
          "type": "command",
          "command": "workbench.action.debug.stepOver"
        },
        {
          "key": "o",
          "name": "Step out",
          "type": "command",
          "command": "workbench.action.debug.stepOut"
        },
        {
          "key": "b",
          "name": "Toggle breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        {
          "key": "B",
          "name": "Toggle inline breakpoint",
          "type": "command",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        {
          "key": "j",
          "name": "Jump to cursor",
          "type": "command",
          "command": "debug.jumpToCursor"
        },
        {
          "key": "v",
          "name": "REPL",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        },
        {
          "key": "w",
          "name": "Focus on watch window",
          "type": "command",
          "command": "workbench.debug.action.focusWatchView"
        },
        {
          "key": "W",
          "name": "Add to watch",
          "type": "command",
          "command": "editor.debug.action.selectionToWatch"
        }
      ]
    },
    {
      "key": "e",
      "name": "UI toggles...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Toggle Terminal",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "e",
          "name": "Toggle side bar visibility",
          "type": "command",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        {
          "key": "F",
          "name": "Toggle full screen",
          "type": "command",
          "command": "workbench.action.toggleFullScreen"
        },
        {
          "key": "j",
          "name": "Toggle panel visibility",
          "type": "command",
          "command": "workbench.action.togglePanel"
        },
        {
          "key": "l",
          "name": "Toggle tool/activity bar visibility",
          "type": "command",
          "command": "workbench.action.toggleActivityBarVisibility"
        },
        {
          "key": "m",
          "name": "Toggle maximized panel",
          "type": "command",
          "command": "workbench.action.toggleMaximizedPanel"
        },
        {
          "key": "M",
          "name": "minimap",
          "type": "command",
          "command": "editor.action.toggleMinimap"
        },
        {
          "key": "S",
          "name": "Toggle status bar",
          "type": "command",
          "command": "workbench.action.toggleStatusbarVisibility"
        },
        {
          "key": "T",
          "name": "Toggle tab visibility",
          "type": "command",
          "command": "workbench.action.toggleTabsVisibility"
        }
      ]
    },
    {
      "key": "f",
      "name": "Find & Replace...",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "editor.action.startFindReplaceAction"
        },
        {
          "key": "s",
          "name": "Symbol",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "t",
          "name": "text",
          "type": "command",
          "command": "workbench.action.findInFiles"
        },
        {
          "key": "p",
          "name": "Project",
          "type": "command",
          "command": "workbench.action.replaceInFiles"
        }
      ]
    },
    {
      "key": "g",
      "name": "Git...",
      "type": "bindings",
      "bindings": [
        {
          "key": "/",
          "name": "Search Commits",
          "command": "gitlens.showCommitSearch",
          "type": "command",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": ";",
          "name": "Blame",
          "type": "command",
          "command": "gitlens.toggleFileBlame"
        },
        {
          "key": "a",
          "name": "Stage",
          "type": "command",
          "command": "git.stage"
        },
        {
          "key": "b",
          "name": "Checkout",
          "type": "command",
          "command": "git.checkout"
        },
        {
          "key": "B",
          "name": "Browse",
          "type": "command",
          "command": "gitlens.openFileInRemote"
        },
        {
          "key": "c",
          "name": "Commit",
          "type": "command",
          "command": "git.commit"
        },
        {
          "key": "C",
          "name": "Cherry Pick",
          "type": "command",
          "command": "gitlens.views.cherryPick"
        },
        {
          "key": "d",
          "name": "Delete Branch",
          "type": "command",
          "command": "git.deleteBranch"
        },
        {
          "key": "f",
          "name": "Fetch",
          "type": "command",
          "command": "git.fetch"
        },
        {
          "key": "F",
          "name": "Pull From",
          "type": "command",
          "command": "git.pullFrom"
        },
        {
          "key": "g",
          "name": "Graph",
          "type": "command",
          "command": "git-graph.view"
        },
        {
          "key": "h",
          "name": "Heatmap",
          "type": "command",
          "command": "gitlens.toggleFileHeatmap"
        },
        {
          "key": "H",
          "name": "History",
          "type": "command",
          "command": "gitlens.showQuickFileHistory"
        },
        {
          "key": "i",
          "name": "Init",
          "type": "command",
          "command": "git.init"
        },
        {
          "key": "j",
          "name": "Next Change",
          "type": "command",
          "command": "workbench.action.editor.nextChange"
        },
        {
          "key": "k",
          "name": "Previous Change",
          "type": "command",
          "command": "workbench.action.editor.previousChange"
        },
        {
          "key": "m",
          "name": "Merge",
          "type": "command",
          "command": "git.merge"
        },
        {
          "key": "p",
          "name": "Push",
          "type": "command",
          "command": "git.push"
        },
        {
          "key": "P",
          "name": "Pull",
          "type": "command",
          "command": "git.pull"
        },
        {
          "key": "S",
          "name": "Stash",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "s",
          "name": "Status",
          "type": "command",
          "command": "gitlens.showQuickRepoStatus",
          "when": "gitlens:enabled && config.gitlens.keymap == 'alternate'"
        },
        {
          "key": "t",
          "name": "Create Tag",
          "type": "command",
          "command": "git.createTag"
        },
        {
          "key": "T",
          "name": "Delete Tag",
          "type": "command",
          "command": "git.deleteTag"
        },
        {
          "key": "U",
          "name": "Unstage",
          "type": "command",
          "command": "git.unstage"
        }
      ]
    },
    {
      "key": "h",
      "name": "Split Horizontal",
      "type": "command",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "l",
      "name": "LSP...",
      "type": "bindings",
      "bindings": [
        {
          "key": ";",
          "name": "Refactor",
          "type": "command",
          "command": "editor.action.refactor",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "a",
          "name": "Auto Fix",
          "type": "command",
          "command": "editor.action.autoFix",
          "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
        },
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.revealDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.revealDeclaration"
        },
        {
          "key": "e",
          "name": "Errors",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "f",
          "name": "Format",
          "type": "command",
          "command": "editor.action.formatDocument",
          "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.goToImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
        },
        {
          "key": "l",
          "name": "Code Lens",
          "type": "command",
          "command": "codelens.showLensesInCurrentLine"
        },
        {
          "key": "n",
          "name": "Next Problem",
          "type": "command",
          "command": "editor.action.marker.next",
          "when": "editorFocus"
        },
        {
          "key": "N",
          "name": "Next Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.nextInFiles",
          "when": "editorFocus"
        },
        {
          "key": "o",
          "name": "Outline",
          "type": "command",
          "command": "outline.focus"
        },
        {
          "key": "p",
          "name": "Prev Problem",
          "type": "command",
          "command": "editor.action.marker.prevInFiles",
          "when": "editorFocus"
        },
        {
          "key": "P",
          "name": "Prev Problem (Proj)",
          "type": "command",
          "command": "editor.action.marker.prev",
          "when": "editorFocus"
        },
        {
          "key": "q",
          "name": "Quick Fix",
          "type": "command",
          "command": "editor.action.quickFix",
          "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.goToReferences",
          "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "R",
          "name": "Rename",
          "type": "command",
          "command": "editor.action.rename",
          "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
        },
        {
          "key": "v",
          "name": "View All References",
          "type": "command",
          "command": "references-view.find",
          "when": "editorHasReferenceProvider"
        },
        {
          "key": "s",
          "name": "Go To Symbol",
          "type": "command",
          "command": "workbench.action.gotoSymbol"
        },
        {
          "key": "S",
          "name": "Show All Symbols",
          "type": "command",
          "command": "workbench.action.showAllSymbols"
        }
      ]
    },
    {
      "key": "o",
      "name": "Open...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Directory",
          "type": "command",
          "command": "workbench.action.files.openFolder"
        },
        {
          "key": "f",
          "name": "File",
          "type": "command",
          "command": "workbench.action.files.openFile"
        },
        {
          "key": "r",
          "name": "Recent",
          "type": "command",
          "command": "workbench.action.openRecent"
        },
        {
          "key": "k",
          "name": "Open Keybindings file",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindingsFile"
        },
        {
          "key": "K",
          "name": "Open Keyboard Shortcuts",
          "type": "command",
          "command": "workbench.action.openGlobalKeybindings"
        },
        {
          "key": "P",
          "name": "Open Preferences",
          "type": "command",
          "command": "workbench.action.openSettings"
        },
        {
          "key": "s",
          "name": "Open Settings file",
          "type": "command",
          "command": "workbench.action.openSettingsJson"
        },
        {
          "key": "S",
          "name": "Open snippets",
          "type": "command",
          "command": "workbench.action.openSnippets"
        }
      ]
    },
    {
      "key": "p",
      "name": "Peek...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Definition",
          "type": "command",
          "command": "editor.action.peekDefinition",
          "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "D",
          "name": "Declaration",
          "type": "command",
          "command": "editor.action.peekDeclaration"
        },
        {
          "key": "i",
          "name": "Implementation",
          "type": "command",
          "command": "editor.action.peekImplementation",
          "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
        },
        {
          "key": "p",
          "name": "Toggle Focus",
          "type": "command",
          "command": "togglePeekWidgetFocus",
          "when": "inReferenceSearchEditor || referenceSearchVisible"
        },
        {
          "key": "r",
          "name": "References",
          "type": "command",
          "command": "editor.action.referenceSearch.trigger"
        },
        {
          "key": "t",
          "name": "Type Definition",
          "type": "command",
          "command": "editor.action.peekTypeDefinition"
        }
      ]
    },
    {
      "key": "q",
      "name": "Quokka",
      "type": "bindings",
      "bindings": [
        {
          "key": "f",
          "name": "Start on current file",
          "type": "command",
          "command": "quokka.makeQuokkaFromExistingFile",
          "when": "!quokka.isLiveShareClient && !terminalFocus"
        },
        {
          "key": "e",
          "name": "Stop on current file",
          "type": "command",
          "command": "quokka.stopCurrent",
          "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "quokka.showOutput",
          "when": "quokka.hasActiveSession && !terminalFocus"
        },
        {
          "key": "x",
          "name": "Stop all",
          "type": "command",
          "command": "quokka.stopAll",
          "when": "quokka.hasActiveSession && !quokka.isLiveShareClient && !terminalFocus"
        }
      ]
    },
    {
      "key": "S",
      "name": "Show...",
      "type": "bindings",
      "bindings": [
        {
          "key": "e",
          "name": "Show explorer",
          "type": "command",
          "command": "workbench.view.explorer"
        },
        {
          "key": "s",
          "name": "Show search",
          "type": "command",
          "command": "workbench.view.search"
        },
        {
          "key": "g",
          "name": "Show source control",
          "type": "command",
          "command": "workbench.view.scm"
        },
        {
          "key": "t",
          "name": "Show test",
          "type": "command",
          "command": "workbench.view.extension.test"
        },
        {
          "key": "r",
          "name": "Show remote explorer",
          "type": "command",
          "command": "workbench.view.remote"
        },
        {
          "key": "x",
          "name": "Show extensions",
          "type": "command",
          "command": "workbench.view.extensions"
        },
        {
          "key": "p",
          "name": "Show problem",
          "type": "command",
          "command": "workbench.actions.view.problems"
        },
        {
          "key": "o",
          "name": "Show output",
          "type": "command",
          "command": "workbench.action.output.toggleOutput"
        },
        {
          "key": "d",
          "name": "Show debug console",
          "type": "command",
          "command": "workbench.debug.action.toggleRepl"
        }
      ]
    },
    {
      "key": "v",
      "name": "Split Vertical",
      "type": "command",
      "command": "workbench.action.splitEditor"
    },
    {
      "key": "w",
      "name": "Window...",
      "type": "bindings",
      "bindings": [
        {
          "key": "W",
          "name": "Focus previous editor group",
          "type": "command",
          "command": "workbench.action.focusPreviousGroup"
        },
        {
          "key": "h",
          "name": "Move editor group left",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        {
          "key": "j",
          "name": "Move editor group down",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        {
          "key": "k",
          "name": "Move editor group up",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        {
          "key": "l",
          "name": "Move editor group right",
          "type": "command",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        {
          "key": "t",
          "name": "Toggle editor group sizes",
          "type": "command",
          "command": "workbench.action.toggleEditorWidths"
        },
        {
          "key": "m",
          "name": "Maximize editor group",
          "type": "command",
          "command": "workbench.action.minimizeOtherEditors"
        },
        {
          "key": "M",
          "name": "Maximize editor group and hide side bar",
          "type": "command",
          "command": "workbench.action.maximizeEditor"
        },
        {
          "key": "=",
          "name": "Reset editor group sizes",
          "type": "command",
          "command": "workbench.action.evenEditorWidths"
        },
        {
          "key": "z",
          "name": "Combine all editors",
          "type": "command",
          "command": "workbench.action.joinAllGroups"
        },
        {
          "key": "d",
          "name": "Close editors group",
          "type": "command",
          "command": "workbench.action.closeEditorsInGroup"
        },
        {
          "key": "x",
          "name": "Close all editor groups",
          "type": "command",
          "command": "workbench.action.closeAllGroups"
        }
      ]
    },
    {
      "key": "x",
      "name": "Close Active Editor",
      "type": "command",
      "command": "workbench.action.closeActiveEditor"
    },
    {
      "key": "y",
      "name": "Sync...",
      "type": "bindings",
      "bindings": [
        {
          "key": "d",
          "name": "Download Settings",
          "type": "command",
          "command": "extension.downloadSettings"
        },
        {
          "key": "u",
          "name": "Upload Settings",
          "type": "command",
          "command": "extension.updateSettings"
        }
      ]
    },
    {
      "key": "z",
      "name": "Toggle zen mode",
      "type": "command",
      "command": "workbench.action.toggleZenMode"
    }
  ],
}