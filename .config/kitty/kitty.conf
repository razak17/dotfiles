# vim:fdm=marker:ft=kitty

#--------------------------------------------------------------------------------
# Keymaps to remember
#--------------------------------------------------------------------------------
# <Ctrl>-<Cmd>-, - reload config
# <Cmd>+n - new window
#--------------------------------------------------------------------------------
# Fonts {{{
#--------------------------------------------------------------------------------
# Font family. You can also specify different fonts for the
# bold/italic/bold-italic variants.
#
# You can get a list of full family names available on your computer by running kitty list-fonts
# font_family      Hurmit Nerd Font
# font_family      Fira Code Nerd Font
# font_family      JetBrains Mono Nerd Font
# font_family      Cascadia Code
font_family      Operator Mono Lig Book
italic_font      Operator Mono Lig Book Italic
bold_font        Operator Mono Lig Medium
bold_italic_font Operator Mono Lig Medium Italic

# NOTE: Do not use odd values as these affect how kitty renders margin
font_size                       11
modify_font                     strikethrough_position 125%
modify_font                     strikethrough_thickness 250%
modify_font                     underline_position 150%
modify_font                     underline_thickness 1

# https://sw.kovidgoyal.net/kitty/conf.html?highlight=font%20features
# https://github.com/tonsky/FiraCode/wiki/How-to-enable-stylistic-sets
font_features                   FiraCodeNerdFontComplete-Retina +zero +ss06

# disable ligatures when the cursor is over them so they are easier to edit
disable_ligatures               cursor
#}}}
#--------------------------------------------------------------------------------
# Cursor customization {{{
#--------------------------------------------------------------------------------
cursor                          none
# The cursor shape can be one of (block, beam, underline)
# cursor_shape     block
cursor_stop_blinking_after      0.0
pointer_shape_when_dragging     hand
#}}}
#--------------------------------------------------------------------------------
# Mouse {{{
#--------------------------------------------------------------------------------
copy_on_select                  yes
scrollback_lines                10000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 15
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             yes
#}}}
#--------------------------------------------------------------------------------
# Audio/visual bell {{{
#--------------------------------------------------------------------------------
bell_on_tab                     "üîî "
enable_audio_bell               no
# Makes the dock icon bounce on macOS or the taskbar flash on linux.
window_alert_on_bell            yes
#}}}
#--------------------------------------------------------------------------------
# Window layout {{{
#--------------------------------------------------------------------------------
remember_window_size            yes
enabled_layouts                 tall:bias=55;full_size=1,stack,fat,grid,horizontal
window_border_width             1.0
window_margin_width             0.0
window_padding_width            0
placement_strategy              top-left
inactive_text_alpha             0.8
# (static,scale,size)
resize_draw_strategy            scale
#}}}
#--------------------------------------------------------------------------------
# Tab bar {{{
#--------------------------------------------------------------------------------
tab_bar_style                   separator
tab_separator                   "  Óò°  "
tab_title_template              "{sup.index} {fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
active_tab_title_template       "{sup.index} ‚ùê {fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title} {fmt.fg._5B6268}{fmt.nobold}({num_windows})"
tab_bar_edge                    top
tab_bar_align                   center
active_tab_font_style           bold-italic
#}}}
#--------------------------------------------------------------------------------
# Advanced {{{
#--------------------------------------------------------------------------------
# HACK: passing environment variables to GUI applications in macOS is very hard
# so this works around that by specifying the path to homebrew installations here
# this only provides the $PATH not all the missing environment variables.
# NOTE: this is wy nvim must be started inside this file using zsh -c 'nvim'
env PATH=/opt/homebrew/bin/:/usr/local/bin/:${PATH}

# The shell program to execute. The default value of . means
# to use whatever shell is set as the default shell for the current user.
# Note that on macOS if you change this, you might need to add --login to
# ensure that the shell starts in interactive mode and reads its startup rc files.
shell                           .
allow_remote_control            yes
listen_on                       unix:/tmp/mykitty
#}}}
#--------------------------------------------------------------------------------
# Startup Session {{{
#--------------------------------------------------------------------------------
# FIXME: use ${SYNC_DIR}/kitty/startup.conf once I figure out how to pass
# environment variables to GUI apps on MacOS
# startup_session                 ~/Dropbox/kitty/startup.conf
#}}}
#--------------------------------------------------------------------------------
# Keyboard shortcuts {{{
#--------------------------------------------------------------------------------
# For a list of key names, see: http://www.glfw.org/docs/latest/group__keys.html
# For a list of modifier names, see: http://www.glfw.org/docs/latest/group__mods.html
kitty_mod                       ctrl+shift
# You can use the special action no_op to unmap a keyboard shortcut that is
# assigned in the default configuration.
#
# You can combine multiple actions to be triggered by a single shortcut, using the
# syntax below:
# map key combine <separator> action1 <separator> action2 <separator> action3 ...
# For example:
# map kitty_mod+e combine : new_window : next_layout
# this will create a new window and switch to the next available layout
#
# You can use multi-key shortcuts using the syntax shown below:
# map key1>key2>key3 action
# For example:
# map ctrl+f>2 set_font_size 20
# this will change the font size to 20 points when you press ctrl+f and then 2

# map cmd+left click to open URLs
mouse_map super+left release grabbed,ungrabbed mouse_handle_click link
#}}}
#-------------------------------------------------------------------------------
# Clipboard {{{
#-------------------------------------------------------------------------------
map kitty_mod+c copy_to_clipboard
map kitty_mod+v  paste_from_clipboard
#}}}
#--------------------------------------------------------------------------------
# Scrolling {{{
#--------------------------------------------------------------------------------
map kitty_mod+k                 scroll_line_up
map kitty_mod+j                 scroll_line_down
map kitty_mod+d                 scroll_page_up
map kitty_mod+y                 scroll_page_down
# map kitty_mod+h         show_scrollback
#}}}
#-------------------------------------------------------------------------------
# Tab management {{{
#-------------------------------------------------------------------------------
action_alias                    launch_tab launch --type=tab --cwd=current
map kitty_mod+j                 next_tab
map kitty_mod+k                 previous_tab
map kitty_mod+l                 launch rvim
map kitty_mod+n                 new_tab
map kitty_mod+x                 close_tab
map kitty_mod+.                 next_layout
map kitty_mod+alt+t             set_tab_title
map ctrl+,                      no_op
map ctrl+.                      move_tab_forward
map ctrl+,                      move_tab_backward
#}}}
#--------------------------------------------------------------------------------
# Window management {{{
#--------------------------------------------------------------------------------
map kitty_mod+space             toggle_layout stack
map kitty_mod+enter             new_window
map kitty_mod+q                 close_window
map kitty_mod+w                 quit
map kitty_mod+;                 detach_window ask
map kitty_mod+]                 next_window
map kitty_mod+[                 previous_window
map kitty_mod+f                 move_window_forward
map kitty_mod+b                 move_window_backward
map kitty_mod+s                 focus_visible_window
map kitty_mod+1                 first_window
map kitty_mod+2                 second_window
map kitty_mod+3                 third_window
map kitty_mod+4                 fourth_window
map kitty_mod+5                 fifth_window
map kitty_mod+6                 sixth_window
map kitty_mod+7                 seventh_window
map kitty_mod+8                 eighth_window
map kitty_mod+9                 ninth_window

# You can open a new window with the current working directory set to the
# working directory of the current window using
map ctrl+alt+enter    new_window_with_cwd
#}}}
#-------------------------------------------------------------------------------
# Layout management {{{
#-------------------------------------------------------------------------------
# You can create shortcuts to switch to specific layouts
# map kitty_mod+r>t          goto_layout tall
# map kitty_mod+r>f          goto_layout fat
# map kitty_mod+r>s          goto_layout stack
#}}}
#-------------------------------------------------------------------------------
# Font sizes {{{
#-------------------------------------------------------------------------------
map ctrl+equal          increase_font_size
map ctrl+minus          decrease_font_size
map ctrl+0              restore_font_size
map kitty_mod+equal     increase_font_size
map kitty_mod+minus     decrease_font_size
map kitty_mod+0         restore_font_size
#}}}
#-------------------------------------------------------------------------------
# Select and act on visible text {{{
#-------------------------------------------------------------------------------
# Use the hints kitten to select text and either pass it to an external program or
# insert it into the terminal or copy it to the clipboard.

# Open a currently visible URL using the keyboard. The program used to open the
# URL is specified in open_url_with.
map kitty_mod+t         run_kitten text hints

# Open a currently visible file name in nvim at a specific line
map kitty_mod+g kitten hints --type=linenum --linenum-action=tab nvim +{line} +{path}

# Select a path/filename and insert it into the terminal. Useful, for instance to
# run git commands on a filename output from a previous git command.
# map kitty_mod+p>f       run_kitten text hints --type path --program -

# Select a path/filename and open it with the default open program.
# map kitty_mod+p>shift+f run_kitten text hints --type path

# Select a line of text and insert it into the terminal. Use for the
# output of things like: ls -1
# map kitty_mod+p>l       run_kitten text hints --type line --program -

# Select words and insert into terminal.
# map kitty_mod+p>w       run_kitten text hints --type word --program -

# The hints kitten has many more modes of operation that you can map to different
# shortcuts. For a full description run: kitty +kitten hints --help
#}}}
#-------------------------------------------------------------------------------
# Miscellaneous {{{
#-------------------------------------------------------------------------------
map kitty_mod+/                         load_config_file
map kitty_mod+\                         toggle_fullscreen
map kitty_mod+u                         input_unicode_character
map kitty_mod+e>c                       edit_config_file
map kitty_mod+a                         kitty_shell window
map f1                                  show_kitty_env_vars

confirm_os_window_close                 2
#}}}
#-------------------------------------------------------------------------------
# OS specific tweaks {{{
#-------------------------------------------------------------------------------
draw_minimal_borders                    yes
hide_window_decorations                 no
#}}}
#-------------------------------------------------------------------------------
# Includes {{{
#-------------------------------------------------------------------------------
# You can include secondary config files via the "include" directive.
# If you use a relative path for include, it is resolved with respect to the
# location of the current config file. For example:
# include ${HOME}/${USER}.conf
# Doom Vibrant
include snazzy.conf
#}}}
#-------------------------------------------------------------------------------
