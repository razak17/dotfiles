#!/bin/zsh

typeset -g -A key
typeset -U PATH path

LOCAL="$HOME/.local/bin"
ASDF_INSTALLS="$HOME/.asdf/installs"
DEV_HOME="$HOME/Dev"

CASE_SENSITIVE="true"
HIST_STAMPS="mm/dd/yyyy"
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

# config
autoload -U colors && colors  # Load colors

zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

zle_highlight=('paste:none')
zshcache_time="$(date +%s%N)"

# opts
setopt always_to_end        # move cursor to end if word had one match
setopt auto_cd              # cd by typing directory name if it's not a command
setopt auto_list            # automatically list choices on ambiguous completion
setopt auto_menu            # automatically use menu completion
setopt correct_all          # autocorrect commands
setopt hist_ignore_all_dups # remove older duplicate entries from history
setopt hist_reduce_blanks   # remove superfluous blanks from history items
setopt inc_append_history   # save history entries as soon as they are entered
setopt share_history        # share history between different instances
setopt interactive_comments # allow comments in interactive shells
setopt complete_aliases     # autocomplete for aliases
unsetopt nomatch
unsetopt PROMPT_SP
setopt append_history

# Default programs:
export EDITOR="nvim"
export TERMINAL="alacritty"
export BROWSER="firefox"

#autoload -U colors && colors
export CLICOLOR=1

export MANPAGER='nvim +Man!'
export MANWIDTH=999

# Colorful Man Pages
export PAGER=less
export LESS=-R
export LESS_TERMCAP_mb=$'\E[01;31m'         # begin blinking
export LESS_TERMCAP_md=$'\E[01;38;5;74m'    # begin bold
export LESS_TERMCAP_me=$'\E[0m'             # end mode
export LESS_TERMCAP_se=$'\E[0m'             # end standout-mode
export LESS_TERMCAP_so=$'\E[38;5;246m'      # begin standout-mode - info box
export LESS_TERMCAP_ue=$'\E[0m'             # end underline
export LESS_TERMCAP_us=$'\E[04;38;5;146m'   # begin underline

# XDG directories
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export SUDO_ASKPASS="$LOCAL/dmenu/dmenupass"

if [ -x "$HOME/lib/azure-cli/bin/az" ]; then
  AZ_BIN=$HOME/lib/azure-cli/bin
fi

if [ -x "$HOME/.fnm/fnm" ]; then
  FNM_PREFIX="$HOME/.fnm/node-versions/v15.5.1/installation"
  FNM_PACKAGES="$FNM_PREFIX/lib/node_modules/bin"
fi

if [ -d "$HOME/.asdf" ]; then
  ASDF_PACKAGES="$ASDF_INSTALLS/nodejs/15.5.1/.npm/bin"
fi

if [ -x "~/.fzf.zsh" ]; then
  source ~/.fzf.zsh
  # Enable a better reverse search experience.
  export FZF_DEFAULT_COMMAND="rg --files --hidden --follow --glob '!.git'"
  export FZF_DEFAULT_OPTS="--layout=reverse --inline-info --height=80% --color=dark"
fi

path=(
  "$LOCAL"
  "$LOCAL/dmenu"
  "$LOCAL/dwm"
  "$LOCAL/sb"
  "$LOCAL/statusbar"
  "$CONDA"
  "$AZ_BIN"
  "$ASDF_PACKAGES"
  "$path[@]"
)

export PATH

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home/razak/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/home/razak/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/home/razak/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/home/razak/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# zsh-autosuggestions accept
bindkey '^ ' autosuggest-accept

autoload -U compinit

# forces zsh to realize new commands
zstyle ':completion:*' completer _oldlist _expand _complete _match _ignored _approximate
# select completions with arrow keys
zstyle ':completion:*' menu select
# group results by category
zstyle ':completion:*' group-name ''
# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.cache/zsh
# enabling autocompletion of privileged environments in privileged commands
zstyle ':completion::complete:*' gain-privileges 1
zstyle ':urlglobber' url-other-schema
zmodload -i zsh/complist

compinit
_comp_options+=(globdots)

