#-
#

# NOTE: this overrides specify terminal capabilities you are overriding within tmux,
# this should "normally" be "xterm-256color" or "tmux-256color" but in the case of
# kitty it should be "xterm-kitty" so the solution/workaround here is to use the
# value of $TERM. This might not work for all terminals.
# see:
# https://jdhao.github.io/2018/10/19/tmux_nvim_true_color/
# https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.term
# set -g default-terminal "${TERM}"
set -g default-terminal "tmux-256color"
set -as terminal-features ",${TERM}:RGB"
setw -g xterm-keys on
#-------------------------------------------------------------------------------
# Unbind keys
#-------------------------------------------------------------------------------
source $HOME/.config/tmux/unbind.tmux.conf
#-------------------------------------------------------------------------------
#  Terminal settings {{{1
#-------------------------------------------------------------------------------
# Allow undercurls for terminals that support them.
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
# Allow coloured undercurls for terminals that support them.
# set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'
set -ga terminal-overrides ",xterm-256color:Tc"
# kitty graphics protocol
set -gq allow-passthrough on
set -ga update-environment "${TERM}"
set -ga update-environment "${TERM_PROGRAM}"
# }}}
#-------------------------------------------------------------------------------
#  Prefix {{{1
#-------------------------------------------------------------------------------
set -g prefix C-space
bind C-space send-prefix

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
# super useful when using "grouped sessions" and multi-monitor setup
set-option -wg aggressive-resize on # Allow opening multiple terminals to view the same session at different sizes
set-option -sg escape-time 10 # Remove delay when switching between Vim modes
set-option  -g focus-events on
set-option  -g history-limit 100000 # Add a bit more scroll history in the buffer.
set-option  -g renumber-windows on
# }}}
#-------------------------------------------------------------------------------
#  Display {{{1
#-------------------------------------------------------------------------------
set-option -g set-titles on
set-option -g set-titles-string '‚óè #S[#I]'
set-option -g allow-rename on
set-option -g base-index 1 # Start windows and panes index at 1, not 0
set-option -g pane-base-index 1
set-option -g monitor-activity on
set-option -g monitor-silence 20000
set-option -sg repeat-time 100 # Time for repeatable commands
set-option -g display-time 1000 # Press a key to close display message
set-option -g display-panes-time 200 # display pane numbers
set-option -g message-limit 77 # Message time
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -wg automatic-rename on # Ensure window titles get renamed automatically
set-option -g renumber-windows on # Ensure window index numbers get reordered on delete
set-option -g visual-activity on
set-option -g visual-silence on
set-option -g monitor-bell on
set-option -g main-pane-width 55% # Width for main-horizontal and main-vertical layout
set-option -g main-pane-height 55% # Height for main-horizontal and main-vertical layout
# Disable tmux statusline on zooming into a pane
# @see https://gist.github.com/bartj3/6d3bd8efd2ceaf02d443
# set-hook -g after-resize-pane "if-shell \"tmux list-panes -F '#F' | grep -q Z\" \"set -g status off\" \"set -g status on\""
# }}}
#-------------------------------------------------------------------------------
#  Navigation {{{1
#-------------------------------------------------------------------------------
set-option -g detach-on-destroy off
set-option -g mouse on
set-option -wg mode-keys vi # set vi mode for copy mode

bind r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display "Tmux config reloaded!"

bind -N "Next layout" c-w next-layout
bind "=" run "ftmux -r" # Up to 4 panes
bind -N "Break pane into new window" B run "ftmux -b"

# sessions and clients
bind -r c-k switch-client -p
bind -r c-j switch-client -n
bind -N "Tree mode" w choose-tree -Z
bind -N "Sessionizer" -r P run-shell "tmux-projects-sessions"
bind c-l run "ftmux --clear-history"
# bind c-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"
bind -N "New window" W command-prompt "new-window -c '#{pane_current_path}' -n %1"
bind -N "New session" S command-prompt "new-session -c '#{pane_current_path}' -s %%"
bind -N "Detach client" d confirm-before -p " Detach this client? (y/n)" detach-client
bind -N "Kill session" Q confirm-before -p " Kill-session #S? (y/n)" kill-session
bind -N "Rename session" R command-prompt -I "#{session_name}" "rename-session '%%'"
bind -N "Move statusbar to top" M-k run-shell "tmux set-option -g status-position top;"
bind -N "Move statusbar to bottom" M-j run-shell "tmux set-option -g status-position bottom;"

# windows
bind -N "Previous window"  BSpace previous-window
bind -N "Rotate clockwise" C-i rotate-window -DZ
bind -N "Rotate anti-clockwise" C-o rotate-window -UZ
bind -N "Go to last window" a last-window
bind -N "New window" c neww -c "#{pane_current_path}"
bind -N "Kill all widows except current" C-x confirm-before -p " Kill all other windows? (y/n)" "kill-window -a"
bind -N "Split window horizontally in pwd" '-' split-window -v -l 40% -c "#{pane_current_path}"
bind -N "Split window vertically in pwd" '\' split-window -h -l 45% -c "#{pane_current_path}" -h
bind -N "Go to next window" C-n next-window
bind -N "Go to previous window" C-p previous-window
bind -N "Swap window with previous" < swap-window -t -1
bind -N "Swap window with previous" > swap-window -t +1
# bind -N "Kill window" X confirm-before -p " Kill window #W? (y/n)" kill-window

# quick pane cycling
bind -N "Go to next pane" ";" run "ftmux --nextpane"
bind -N "Go to next pane" "C-;" run "ftmux --nextpane"
bind -N "Go to next pane" n select-pane -Z -t :.+
bind -N "Go to prev pane" p select-pane -Z -t :.-

# panes
bind Space resize-pane -Z
bind C-e display-panes -d 2000 "select-pane -t '%%'"
bind -N "Synchronize panes" y setw synchronize-panes
bind -N "Kill current pane" x confirm-before -p " Kill pane #S? (y/n)" kill-pane
bind -N "Select the pane to the left the active pane" -r h select-pane -LZ
bind -N "Select the pane below the active pane" -r j select-pane -DZ
bind -N "Select the pane above the active pane" -r k select-pane -UZ
bind -N "Select the pane to the right the active pane" -r l select-pane -RZ
bind -N "Resize current pane down by 2" J resize-pane -D 2
bind -N "Resize current pane up by 2" K resize-pane -U 2
bind -N "Resize current pane left by 4" H resize-pane -L 4
bind -N "Resize current pane right by 4" L resize-pane -R 4
# bind -N "Swap bottom with top" -r K swap-pane -UZ
# bind -N "Swap top with bottom" -r J swap-pane -DZ
# bind R respawn-pane -k # bind M-r command-prompt -I "#{window_name}" "rename-window '%%'"
bind -N "Show environment variables" E show-environment -g

bind -N "Gp new chat" A display-popup \
  -w 90% \
  -h 90% \
  -E 'rvim -no-min -ts-extra --ai -c GpChatNew'

bind -N "Newsraft" F display-popup \
  -w 90% \
  -h 90% \
  -E 'newsraft'

bind -N "Open rmpc" M display-popup \
  -w 90% \
  -h 90% \
  -E 'rmpc'

bind -N "Obsidian search" N display-popup \
  -w 90% \
  -h 90% \
  -E 'obsidian-open'

bind -N "Watch Youtube video" Y display-popup \
  -w 30% \
  -h 10% \
  -E 'yw'

bind -N "Open terminal" z display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "zsh"

bind -N "Sessionizer" C-f display-popup \
  -w 90% \
  -h 90% \
  -E 'tmux-sessionizer'

bind -N "Open btop" M-b display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "btop"

bind -N "Open opencode" M-o display-popup \
  -d "#{pane_current_path}" \
  -w 90% \
  -h 90% \
  -E "opencode"

##### Display Menu #####
bind d display-menu -T "#[align=centre]Config Files" -x C -y C \
  "alacritty.yml"    a  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/alacritty/alacritty.toml'" \
  "aliases"          A  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/zsh/modules/aliases'" \
  "dwmblocks"        b  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.dots/suckless/dwmblocks/config.h'" \
  "dwm"              d  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.dots/suckless/dwm/config.h'" \
  "dwm old"          D  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.dots/dwm/config.h'" \
  "ghosty"           g  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/ghostty/config'" \
  "kitty.conf"       K  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/kitty/kitty.conf'" \
  "tmux.conf"        t  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/tmux/tmux.conf'" \
  "tmux.conf"        r  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/rmpc/config.ron'" \
  "zshrc"            z  "display-popup -w 90% -h 90% -E 'rvim -no-min ~/.config/zsh/zshrc'" \
  "Exit"             q  ""

# copy mode
bind c-c copy-mode
bind c-v paste-buffer
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi V send-keys -X select-line
bind -T copy-mode-vi c-v send-keys -X rectangle-toggle
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
bind -T copy-mode-vi MouseDown1Pane send-keys -X clear-selection
bind -T copy-mode-vi MouseDown3Pane send-keys -X cancel
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe 'xclip -in -selection clipboard'
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi n send-keys -X search-again

# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

bind -N "Toggle Statusbar" C-b set-option status # Toggle status bar bg
bind -N "Clock mode" C-t clock-mode # Clock Mode (t is used by sessionist)

# Kitty scrollback
bind [ run-shell 'kitty @ kitten /home/razak/.local/share/rvim/lazy/kitty-scrollback.nvim/python/kitty_scrollback_nvim.py --env NVIM_APPNAME=rvim --env "TMUX=$TMUX" --env "TMUX_PANE=#{pane_id}"'
# }}}
# -----------------------------------------------------------------------------
# Color Scheme
# -----------------------------------------------------------------------------
bg='#161825'
# bg='#0a0814'
myDark='#1d3f44'
dark='#5B6268'
blue='#51afef'
purple='#9d7cd8'
green='#1d7c78'
bg_highlight='#20222f'

status_bg='#2f333b'
fg_color='#030303'
inactive_fg_color=$dark
active_fg_color='#7ec0ee'
# prefix_color='#c678dd'
prefix_color='#1d7c78'
# }}}
#-------------------------------------------------------------------------------
#  Menu {{{1
set -g menu-style fg=default,bg=$bg
set -g menu-selected-style "fg=black,bg=$green,bold"
set -g menu-border-style fg=$green,bg=$bg
set -g menu-border-lines "single"
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#  Popup {{{1
#-------------------------------------------------------------------------------
set -g popup-border-lines "single"  # or single, double, heavy, simple
set -g popup-border-style fg=$green,bg=default
#-------------------------------------------------------------------------------
#  Status Bar {{{1
#-------------------------------------------------------------------------------
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_mode_attr 'fg=white,bg=$green'

set -g status-keys vi
set -g status on
set -g status-interval 17
set -g status-left-length 40
set -g status-right-length 40
# set -g status-style fg=colour110,bg=$bg_highlight
set -g status-style fg=colour110,bg=default

pane_count="#{?window_active,#[noitalics][#{pane_index}/#{window_panes}],} "
win_count="win#{?window_active,#[noitalics][#{window_index}/#(tmux list-windows | wc -l)],} "
session_windows="#{?window_active,#[noitalics][#I],}"

status_current_format="#[fg=$active_fg_color]#W"
status_current_format_prefix="#[fg=$inactive_fg_color]#W"

status_left="#[fg=$prefix_color] Óè£ #[fg=$purple]#S#[fg=$blue]$session_windows"
status_left_prefix="#[fg=$blue] Óèù #[fg=$prefix_color]#S#[fg=$purple]$session_windows"
flags_right="%A %b %d | %H:%M "
status_format="#[fg=$inactive_fg_color]#W"
status_format_prefix="#[fg=$active_fg_color]#I"

setw -g window-status-separator " #[fg=$inactive_fg_color]‚Ä¢ "
setw -g window-status-style fg=$inactive_fg_color,bg=default
setw -g window-status-activity-style fg=colour069,bg=default,blink
setw -g window-status-current-style fg=$active_fg_color,bg=default,bold
setw -g window-status-format "#{?client_prefix,$status_format_prefix,$status_format}"
setw -g window-status-current-format "#{?client_prefix,$status_current_format_prefix,$status_current_format}"

set -g status-position "bottom"
set -g status-justify "absolute-centre"
set -g status-left "#{?client_prefix,$status_left_prefix,$status_left}"
set -g status-left-style fg=$active_fg_color,bg=default
set -g status-right "#{?pane_in_mode,#{pane_mode},#{?window_zoomed_flag,zoom,panes}$pane_count}"
set -g status-right-style fg=$active_fg_color,bg=default
# }}}
#-------------------------------------------------------------------------------
#  Pane border {{{1
#-------------------------------------------------------------------------------
set -g pane-base-index 1
set -g pane-border-format ""
set -g pane-border-status "off"
set -g pane-border-lines "heavy"
set -g pane-border-style fg=$myDark,bg=$bg
set -g pane-active-border-style fg=$green,bg=$bg
# }}}
#-------------------------------------------------------------------------------
# Messages
#-------------------------------------------------------------------------------
set -g message-command-style fg=$fg_color,bg=$green,blink
set -g message-style fg=$fg_color,bg=$green,blink
setw -g mode-style fg=$fg_color,bg=$green,blink
#-------------------------------------------------------------------------------
#  Plugins {{{1
#-------------------------------------------------------------------------------
set -g @plugin 'b0o/tmux-autoreload'
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
#-------------------------------------------------------------------------------,
set -g @plugin 'tmux-plugins/tmux-resurrect'
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'
set -g @continuum-save-interval '0'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'
# set -g @resurrect-processes '"nvim->nvim +SLoad"'
#-------------------------------------------------------------------------------
set -g @plugin 'tmux-plugins/tmux-sessionist'
# prefix + g - prompts for session name and switches to it. Performs 'kind-of' name completion.
# Faster than the built-in prefix + s prompt for long session lists.
# prefix + C (shift + c) - prompt for creating a new session by name.
# prefix + X (shift + x) - kill current session without detaching tmux.
# prefix + S (shift + s) - switches to the last session.
# The same as built-in prefix + L that everyone seems to override with some other binding.
# prefix + @ - promote current pane into a new session.
# Analogous to how prefix + ! breaks current pane to a new window.
# prefix + t<secondary-key> - join currently marked pane (prefix + m) to current session/window, and switch to it
# secondary-keys
#   h, -, ": join horizontally
#   v, |, %: join vertically
#   f, @: join full screen
#-------------------------------------------------------------------------------
set -g @plugin '2kabhishek/tmux-tea'
set -g @tea-default-command ""
set -g @tea-bind "f"
set -g @tea-alt-bind "false"
#-------------------------------------------------------------------------------
set -g @plugin 'laktak/extrakto'
set -g @extrakto_key 'o' # Extract visible text
# set -g @extrakto_open_key 'M-O'
#-------------------------------------------------------------------------------
set -g @plugin 'omerxx/tmux-sessionx' # I recommend using `o` if not already in use, for least key strokes when launching
set -g @sessionx-bind 'O' # List of sessions
#-------------------------------------------------------------------------------
# set -g @plugin 'omerxx/tmux-floax'
# set -g @floax-bind '['
# set -g @floax-bind-menu 'M-z' # don't use this, freezes tmux
#-------------------------------------------------------------------------------
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

#Initialize TMUX plugin manager (Keep this line at the BOTTOM of tmux config
run -b '~/.config/tmux/plugins/tpm/tpm'
# }}}
#-----------------------------------------------------------------------------
